service: example-name # To be replaced

configValidationMode: error

package:
  include:
    - src/

custom:
  esbuild:
    bundle: true
    minify: true
    target: node16

plugins:
  - serverless-esbuild
  - serverless-step-functions
  - '@aligent/serverless-conventions'

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-2'}
  memorySize: 192 #mb (default for all)
  # iamRoleStatements:
  # - Effect: "Allow"
  #   Action:
  #     - "s3:*"
  #   Resource:
  #     - Fn::Join:
  #       - ''
  #       - - 'arn:aws:s3:::'
  #         - Ref: S3BucketConfig
  #         - '/*'

functions:
  hello:
    handler: src/hello.handler
  world:
    handler: src/world.handler

stepFunctions:
  validate: true
  stateMachines:
    helloWorld:
      name: ${self:service}-${self:provider.stage}-helloWorld
      definition:
        StartAt: Hello
        States:
          Hello:
            Type: Task
            Resource:
              Fn::GetAtt: [hello, Arn]
            Next: World
          World:
            Type: Task
            Resource:
              Fn::GetAtt: [world, Arn]
            Next: Passthru
          Passthru:
            Type: Pass
            Next: Stop
          Stop:
            Type: Pass
            End: true
#resources:
#  Resources:
# S3BucketConfig:
#   Type: AWS::S3::Bucket
#   Properties:
#     BucketName: ${self:custom.s3.configBucket}
#   DeletionPolicy: Delete

# DBUsers:
#   Type: AWS::DynamoDB::Table
#   Properties:
#     TableName: usersTable
#     AttributeDefinitions:
#       - AttributeName: email
#         AttributeType: S
#     KeySchema:
#       - AttributeName: email
#         KeyType: HASH
#     ProvisionedThroughput:
#       ReadCapacityUnits: 1
#       WriteCapacityUnits: 1
