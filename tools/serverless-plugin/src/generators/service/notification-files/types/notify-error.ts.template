/* eslint-disable @typescript-eslint/no-namespace */
export namespace NotifyError {
    export type InvocationEvent = {
        id: string;
        'detail-type': string;
        source: Source;
        time: string;
        region: string;
        resources: string[];
        detail: {
            executionArn: string;
            logGroupName?: string;
            name: string;
            status: string;
            error: string;
            cause: string;
        };
    };

    export type Source = 'aws.lambda' | 'aws.states';

    export type NextStepsInput = {
        source: Source;
        region: string;
        executionArn: string;
        logGroupName: string | undefined;
    };

    export type Cause = {
        errorType: string;
        errorMessage: string;
        trace?: unknown;
    };

    export type Message = AWSChatbot.CustomNotification;

    export namespace AWSChatbot {
        export interface CustomNotification {
            version: '1.0';
            source: 'custom';
            id?: string;
            content: Content;
            metadata?: Metadata;
        }

        interface Content {
            textType?: 'client-markdown';
            title?: string;
            description: string;
            nextSteps?: string[];
            keywords?: string[];
        }

        interface Metadata {
            threadId?: string;
            summary?: string;
            eventType?: string;
            relatedResources?: string[];
            additionalContext?: Record<string, string>;
        }
    }
}
