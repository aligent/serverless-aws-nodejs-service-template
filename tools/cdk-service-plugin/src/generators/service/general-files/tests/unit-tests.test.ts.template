import { describe, expect, it, beforeEach, afterEach } from 'vitest';
import { getServiceEnv } from '../src/runtime/lib/utils/get-service-env';

describe('getServiceEnv', () => {
    let originalEnv: NodeJS.ProcessEnv;

    beforeEach(() => {
        originalEnv = { ...process.env };
    });

    afterEach(() => {
        process.env = originalEnv;
    });

    it('should return environment variables when all are present', () => {
        process.env.CONFIG_BUCKET = 'test-bucket';
        process.env.CACHE_TABLE = 'test-table';
        process.env.CONFIG_FILE_NAME = 'test-config.json';

        const env = getServiceEnv();

        expect(env).toEqual({
            CONFIG_BUCKET: 'test-bucket',
            CACHE_TABLE: 'test-table',
            CONFIG_FILE_NAME: 'test-config.json',
        });
    });

    it('should throw error when required environment variables are missing', () => {
        delete process.env.CONFIG_BUCKET;
        delete process.env.CACHE_TABLE;
        delete process.env.CONFIG_FILE_NAME;

        expect(() => getServiceEnv()).toThrow();
    });

    it('should throw error when only some environment variables are present', () => {
        process.env.CONFIG_BUCKET = 'test-bucket';
        delete process.env.CACHE_TABLE;
        delete process.env.CONFIG_FILE_NAME;

        expect(() => getServiceEnv()).toThrow();
    });
});
