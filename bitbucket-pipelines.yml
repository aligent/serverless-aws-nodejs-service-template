image: node:22

definitions:
  services:
    docker:
      memory: 3072
  caches:
    corepack-cache: $HOME/.cache/node/corepack
  steps:
    - step: &install
        name: ‚öôÔ∏è Install
        caches:
          - corepack-cache
        script:
          - corepack enable yarn
          - yarn install --immutable
        artifacts:
          - node_modules/**
    - step: &lint
        name: üßπ Lint
        caches:
          - corepack-cache
        script:
          - corepack enable yarn
          - yarn run lint
    - step: &typecheck
        name: üîç Typecheck
        caches:
          - corepack-cache
        script:
          - corepack enable yarn
          - yarn run typecheck
    - step: &test
        name: üß™ Test
        caches:
          - corepack-cache
        script:
          - corepack enable yarn
          - yarn run test
    - step: &deploy
        name: 'Deploy service'
        script:
          - pipe: docker://aligent/cdk-deploy-pipe:22-alpine # Ensure we are using the correct node version in the docker pipeline
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $CDK_DEFAULT_REGION
              CDK_DEPLOY: 'true'
              CDK_DIFF: 'false'
              CDK_SYNTH: 'false'
              CDK_EXTRA_ARGS: '--require-approval never $STACK'
              CDK_CONFIG_PATH: ./cdk-config.yml
              CHECK_FORMAT: 'false'
              CDK_BOOTSTRAP: 'false'

pipelines:
  pull-requests:
    '**':
      - step: *install
      - parallel:
          steps:
            - step: *lint
            - step: *typecheck
            - step: *test
  branches:
    staging:
      - step:
          <<: *deploy
          name: 'Deploy Staging'
          deployment: Staging
    production:
      - step:
          <<: *deploy
          name: 'Deploy Production'
          deployment: Production
